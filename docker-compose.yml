services:
  backend:
    build:
      context: ./ # Используем корень проекта как контекст
      dockerfile: backend/Dockerfile
    ports:
      - '5050:5050' # Backend на порту 5050
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/barber_app?schema=public
    depends_on:
      db:
        condition: service_healthy
    networks:
      - barber-network
  frontend:
    build:
      context: ./ # Используем корень проекта как контекст
      dockerfile: frontend/Dockerfile
    ports:
      - '3000:3000' # Frontend на порту 3000
    depends_on:
      - backend
    networks:
      - barber-network
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=barber_app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '8080:5432' # PostgreSQL на порту 8080 хоста, 5432 в контейнере
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - barber-network
volumes:
  postgres_data:
networks:
  barber-network:
    driver: bridge
